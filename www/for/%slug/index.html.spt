from aspen import Response
from gittip.models.community import name_pattern, slugize, Community
from gittip.utils import format_money, to_statement
from gittip.utils.query_cache import QueryCache

LUXURY = 4

query_cache = QueryCache(website.db, threshold=20)

[---]

I_AM_MAKING = _("I am making the world better by {0}")
WE_ARE_MAKING = _("We are making the world better by {0}")

_slug = path['slug']
if name_pattern.match(_slug) is None:
    raise Response(404)
slug = slugize(_slug)
if slug != _slug:
    request.redirect('../' + slug + '/')

try:
    limit = min(int(qs.get('limit', 12)), 100)
    offset = int(qs.get('offset', 0))
except ValueError:
    raise Response(400)

community = Community.from_slug(slug)

if community is None:
    class StubCommunity:
        slug = _slug
        name = _slug
        nmembers = 0
        check_membership = lambda a, b: False

    community = StubCommunity()

# Set the page title based on the communities name.
title = _("{0} Community", community.name)


# Run queries for listings.
# =========================

new_participants = query_cache.all("""
-- new participants on community page

    SELECT username
         , claimed_time
         , avatar_url
         , statement
         , number
      FROM (
        SELECT DISTINCT ON (p.username)
               p.username
             , claimed_time
             , p.avatar_url
             , p.statement
             , p.number
          FROM participants p
          JOIN elsewhere e
            ON p.username = e.participant
          JOIN current_communities cc
            ON p.username = cc.participant
         WHERE claimed_time IS NOT null
           AND is_suspicious IS NOT true
           AND cc.slug = %s AND cc.is_member
           ) AS foo
  ORDER BY claimed_time DESC
     LIMIT %s
    OFFSET %s

""", (community.slug, limit, offset))

givers = query_cache.all("""
-- top givers on community page

    SELECT username
         , anonymous_giving AS anonymous
         , giving AS amount
         , avatar_url
         , statement
         , number
      FROM participants
      JOIN current_communities cc ON cc.participant = username AND cc.slug = %s
     WHERE is_suspicious IS NOT true
       AND giving > 0
       AND cc.is_member
       AND last_bill_result = ''
  ORDER BY giving DESC
  LIMIT %s
  OFFSET %s

""", (community.slug, limit, offset))

# XXX I'm nearly positive that one or both of givers and receivers can contain
# orphan accounts. See https://github.com/gittip/www.gittip.com/issues/650

receivers = query_cache.all("""
-- top receivers on community page

    SELECT username
         , anonymous_receiving AS anonymous
         , receiving AS amount
         , avatar_url
         , statement
         , number
      FROM participants
      JOIN current_communities cc ON cc.participant = username AND cc.slug = %s
     WHERE is_suspicious IS NOT true
       AND receiving > 0
       AND cc.is_member
  ORDER BY receiving DESC
  LIMIT %s
  OFFSET %s

""", (community.slug, limit, offset))
[---]
{% from 'templates/avatar-url.html' import avatar_url with context %}

{% extends "templates/base.html" %}

{% block heading %}
    <h1>{{ _("Community") }}</h1>
    <p>{{ _("Browse {0}All Communities{1}", "<a href='/for/'>", "</a>") }}</p>
{% endblock %}

{% block scripts %}

<script>
$(document).ready(function() {
    $("a.mini-user:not([data-tip=''])").tipr();

    $('button.join-leave').click(function()
    {
        var button = $(this);
        var name = button.attr('data-name');
        var is_member = button.attr('data-is-member') === 'true';
        Gratipay.communities.update(name, !is_member, function()
        {
            window.location.reload();
        });
    });

});
</script>

{{ super() }}
{% endblock %}

{% block box %}
<div class="on-community">
    <h2 class="pad-sign">{{ community.name }}</h2>
    <div class="unit pad-sign">
        {{ ngettext("{0}{n}{1} Member", "{0}{n}{1} Members", community.nmembers, "<div class='number'>", "</div>").lower() }}
    </div>
</div>
<div class="nav level-1">
    {% if user.ANON %}
    <div class="help with-padding">
        {% include "templates/sign-in-using.html" %}
        {{ _("{0} to join the {1} community on Gratipay.", "", community.name) }}
    </div>
    {% else %}
    {% set is_member = community.check_membership(user.participant) %}
    <button class="join-leave"
            data-name="{{ community.name }}"
            data-is-member="{{ 'true' if is_member else 'false' }}">
        <span>{{ _("Leave") if is_member else _("Join") }}</span>
    </button>
    {% endif %}
</div>

{% endblock %}
{% block page %}

{% if community.nmembers == 0 %}

<div class="col0">

    <h2>{{ _("You're the first one here!") }}</h2>

    <p>{{ _("Bring the {0} community to Gratipay to find like-minded people to give to.", community.name) }}</p>

</div>

{% else %}

<div id="leaderboard">

    <div class="people">
        <h2>{{ _("New Members") }}</h2>
        <ul class="group">
            {% for i, participant in enumerate(new_participants, start=1) %}
            <li{% if i > LUXURY %} class="luxury"{% endif %}>
                <a href="/{{ participant.username }}/" class="mini-user tip"
                data-tip="{{ to_statement((I_AM_MAKING if participant.number == 'singular' else WE_ARE_MAKING), participant.statement) }}">
                    <span class="inner">
                        <span class="avatar"
                            style="background-image: url('{{ avatar_url(participant) }}')">
                        </span>
                        <span class="age">{{ to_age(participant.claimed_time) }}</span>
                        <span class="name">{{ participant.username }}</span>
                    </span>
                </a>
            </li>
            {% endfor %}
        </ul>
    </div>
    <div class="people">
        <h2>{{ _("Top Givers") }}</h2>
        <ul class="group">
            {% for i, giver in enumerate(givers, start=1) %}
            <li{% if i > LUXURY %} class="luxury"{% endif %}>
                {% if giver.anonymous and not user.ADMIN %}
                <span class="mini-user">
                    <span class="inner">
                        <span class="avatar">
                        </span>
                        <span class="money">${{ format_money(giver.amount) }}</span>
                        <span class="name">{{ _("Anonymous") }}</span>
                    </span>
                </span>
                {% else %}
                <a href="/{{ giver.username }}/"
                   class="mini-user{{ ' anonymous' if giver.anonymous else '' }} tip"
                   data-tip="{{ to_statement((I_AM_MAKING if giver.number == 'singular' else WE_ARE_MAKING), giver.statement) }}">
                    <span class="inner">
                        <span class="avatar" style="background-image: url('{{ avatar_url(giver) }}')">
                        </span>
                        <span class="money">${{ format_money(giver.amount) }}</span>
                        <span class="name">{{ giver.username }}</span>
                    </span>
                </a>
                {% endif %}
            </li>
            {% endfor %}
        </ul>
    </div>
    <div class="people">
        <h2>{{ _("Top Receivers") }}</h2>
        <ul class="group">
            {% for i, receiver in enumerate(receivers, start=1) %}
            <li{% if i > LUXURY %} class="luxury"{% endif %}>
                {% if receiver.anonymous and not user.ADMIN %}
                <span class="mini-user">
                    <span class="inner">
                        <span class="avatar">
                        </span>
                        <span class="money">${{ format_money(receiver.amount) }}</span>
                        <span class="name">{{ _("Anonymous") }}</span>
                    </span>
                </span>
                {% else %}
                <a href="/{{ receiver.username }}/"
                   class="mini-user{{ ' anonymous' if receiver.anonymous else '' }} tip"
                   data-tip="{{ to_statement((I_AM_MAKING if receiver.number == 'singular' else WE_ARE_MAKING), receiver.statement) }}">
                    <span class="inner">
                        <span class="avatar"
                            style="background-image: url('{{ avatar_url(receiver) }}')">
                        </span>
                        <span class="money">${{ format_money(receiver.amount) }}</span>
                        <span class="name">{{ receiver.username }}</span>
                    </span>
                </a>
                {% endif %}
            </li>
            {% endfor %}
        </ul>
    </div>

</div>

<div class="more-container">
    <a href="/for/{{ community.slug }}/?limit={{ limit + 12 }}"><button class="selected">{{ _("More") }}</button></a>
</div>

{% endif %}
{% endblock %}
